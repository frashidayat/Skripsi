/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.DurationTimeController;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author LENOVO
 */
public class main extends javax.swing.JFrame {

    private String nameFile;
    private String directory;
    private final DurationTimeController controller;
    private final FileTypeFilter type = new FileTypeFilter(".csv", "Comma Separated Values File");
    private final JFileChooser chooser = new JFileChooser();

    /**
     * Creates new form main
     */
    public main() {
        this.controller = new DurationTimeController(this);
        chooser.setFileFilter(type);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        destinationLabel = new javax.swing.JLabel();
        trafficModelLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        dateTextField = new javax.swing.JTextField();
        calculateButton = new javax.swing.JButton();
        destinationTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        originLabel = new javax.swing.JLabel();
        originTextField = new javax.swing.JTextField();
        bestGuessCheckBox = new javax.swing.JCheckBox();
        optimistCheckBox = new javax.swing.JCheckBox();
        pessimistCheckBox = new javax.swing.JCheckBox();
        showDataButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        destinationLabel.setText("Destination      :");

        trafficModelLabel.setText("Traffic Model    :");

        dateLabel.setText("Date                 :");

        calculateButton.setText("Calculate");
        calculateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateButtonActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        originLabel.setText("Origin               : ");

        bestGuessCheckBox.setText("best_guess");

        optimistCheckBox.setText("optimistic");

        pessimistCheckBox.setText("pessimistic");

        showDataButton.setText("Show Data");
        showDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showDataButtonActionPerformed(evt);
            }
        });

        saveButton.setText("Save Data to CSV");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(destinationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(destinationTextField))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(originLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(originTextField))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(trafficModelLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(12, 12, 12)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bestGuessCheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(optimistCheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pessimistCheckBox)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(dateTextField)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(saveButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showDataButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(calculateButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(originLabel)
                    .addComponent(originTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(destinationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(destinationLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateLabel)
                    .addComponent(dateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(trafficModelLabel)
                    .addComponent(optimistCheckBox)
                    .addComponent(pessimistCheckBox)
                    .addComponent(bestGuessCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(calculateButton)
                    .addComponent(showDataButton)
                    .addComponent(saveButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void calculateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateButtonActionPerformed
        try {
            if (bestGuessCheckBox.isSelected()) {
                if (optimistCheckBox.isSelected()) {
                    if (pessimistCheckBox.isSelected()) {
                        JOptionPane.showMessageDialog(this, "Hanya pilih 2 diantara 3", "ERROR", JOptionPane.ERROR_MESSAGE);
                    } else {
                        jTextArea1.append(controller.doCalculate(dateTextField, originTextField, destinationTextField, bestGuessCheckBox, optimistCheckBox));
                        System.out.println(originTextField.getText());
                        System.out.println(destinationTextField.getText());
                        System.out.println(dateTextField.getText());
                        System.out.println("best_guess");
                        System.out.println("optimistic");
                    }
                } else if (pessimistCheckBox.isSelected()) {
                    jTextArea1.append(controller.doCalculate(dateTextField, originTextField, destinationTextField, bestGuessCheckBox, pessimistCheckBox));
                    System.out.println(originTextField.getText());
                    System.out.println(destinationTextField.getText());
                    System.out.println(dateTextField.getText());
                    System.out.println("best_guess");
                    System.out.println("pessimistic");
                } else {
                    jTextArea1.append(controller.doCalculate(dateTextField, originTextField, destinationTextField, bestGuessCheckBox, null));
                    System.out.println(originTextField.getText());
                    System.out.println(destinationTextField.getText());
                    System.out.println(dateTextField.getText());
                    System.out.println("best_guess");
                }
            } else if (optimistCheckBox.isSelected()) {
                if (pessimistCheckBox.isSelected()) {
                    jTextArea1.append(controller.doCalculate(dateTextField, originTextField, destinationTextField, optimistCheckBox, pessimistCheckBox));
                    System.out.println(originTextField.getText());
                    System.out.println(destinationTextField.getText());
                    System.out.println(dateTextField.getText());
                    System.out.println("optimistic");
                    System.out.println("pessimistic");
                } else {
                    jTextArea1.append(controller.doCalculate(dateTextField, originTextField, destinationTextField, optimistCheckBox, null));
                    System.out.println(originTextField.getText());
                    System.out.println(destinationTextField.getText());
                    System.out.println(dateTextField.getText());
                    System.out.println("optimistic");
                }
            } else if (pessimistCheckBox.isSelected()) {
                jTextArea1.append(controller.doCalculate(dateTextField, originTextField, destinationTextField, pessimistCheckBox, null));
                System.out.println(originTextField.getText());
                System.out.println(destinationTextField.getText());
                System.out.println(dateTextField.getText());
                System.out.println("pessimistic");
            } else {
                JOptionPane.showMessageDialog(this, "Harus pilih minimal salah satu dari 3", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        } catch (ParseException | IOException ex) {
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("");
    }//GEN-LAST:event_calculateButtonActionPerformed

    private void showDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showDataButtonActionPerformed
        jTextArea1.append(controller.doShowData());
    }//GEN-LAST:event_showDataButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        if (controller.checkData()) {
            JOptionPane.showMessageDialog(this, "Data Kosong", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            int result = chooser.showSaveDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) {
                try {
                    nameFile = chooser.getSelectedFile().getName() + type.getExtension();
                    directory = chooser.getCurrentDirectory().toString();
                    controller.saveData(directory, nameFile);
                } catch (IOException ex) {
                    Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox bestGuessCheckBox;
    private javax.swing.JButton calculateButton;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JTextField dateTextField;
    private javax.swing.JLabel destinationLabel;
    private javax.swing.JTextField destinationTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JCheckBox optimistCheckBox;
    private javax.swing.JLabel originLabel;
    private javax.swing.JTextField originTextField;
    private javax.swing.JCheckBox pessimistCheckBox;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton showDataButton;
    private javax.swing.JLabel trafficModelLabel;
    // End of variables declaration//GEN-END:variables
}
